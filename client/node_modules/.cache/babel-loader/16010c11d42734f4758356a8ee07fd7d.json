{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { createElement, useEffect, useState } from 'react';\nexport default function Checkbox(props) {\n  _s();\n\n  const {\n    value,\n    handleChangeCategoryId,\n    categoryId\n  } = props;\n  const [isChecked, setIsChecked] = useState();\n\n  const getIsChecked = () => {\n    if ((categoryId === null || categoryId === void 0 ? void 0 : categoryId.length) != 0) {\n      categoryId === null || categoryId === void 0 ? void 0 : categoryId.every(item => {\n        if (item == value) {\n          setIsChecked(true);\n          return false;\n        } else {\n          setIsChecked(false);\n          return true;\n        }\n      });\n    } else {\n      setIsChecked(false);\n    }\n  };\n\n  useEffect(() => {\n    getIsChecked();\n  }, [categoryId]);\n  return /*#__PURE__*/createElement('input', {\n    type: 'checkbox',\n    checked: isChecked,\n    value: value,\n    onClick: handleChangeCategoryId\n  });\n}\n\n_s(Checkbox, \"genmR+czw9MgQiuIZkeT5pXJb8M=\");\n\n_c = Checkbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"names":["React","createElement","useEffect","useState","Checkbox","props","value","handleChangeCategoryId","categoryId","isChecked","setIsChecked","getIsChecked","length","every","item","type","checked","onClick"],"sources":["C:/Dumbways/BATCH 36/my-app/client/src/Components/form/Checkbox.js"],"sourcesContent":["import React, { createElement, useEffect, useState } from 'react'\r\n\r\nexport default function Checkbox(props) {\r\n\r\n    const { value, handleChangeCategoryId, categoryId } = props\r\n\r\n    const [isChecked, setIsChecked] = useState()\r\n\r\n    const getIsChecked = () => {\r\n        if (categoryId?.length != 0) {\r\n            categoryId?.every((item) => {\r\n              if (item == value) {\r\n                setIsChecked(true);\r\n                return false;\r\n              } else {\r\n                setIsChecked(false);\r\n                return true;\r\n              }\r\n            });\r\n        } else {\r\n            setIsChecked(false);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getIsChecked()\r\n    }, [categoryId])\r\n\r\n  return createElement('input', {\r\n    type: 'checkbox',\r\n    checked: isChecked,\r\n    value: value,\r\n    onClick: handleChangeCategoryId\r\n  })\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,EAA0CC,QAA1C,QAA0D,OAA1D;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EAEpC,MAAM;IAAEC,KAAF;IAASC,sBAAT;IAAiCC;EAAjC,IAAgDH,KAAtD;EAEA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,EAA1C;;EAEA,MAAMQ,YAAY,GAAG,MAAM;IACvB,IAAI,CAAAH,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEI,MAAZ,KAAsB,CAA1B,EAA6B;MACzBJ,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEK,KAAZ,CAAmBC,IAAD,IAAU;QAC1B,IAAIA,IAAI,IAAIR,KAAZ,EAAmB;UACjBI,YAAY,CAAC,IAAD,CAAZ;UACA,OAAO,KAAP;QACD,CAHD,MAGO;UACLA,YAAY,CAAC,KAAD,CAAZ;UACA,OAAO,IAAP;QACD;MACF,CARD;IASH,CAVD,MAUO;MACHA,YAAY,CAAC,KAAD,CAAZ;IACH;EACJ,CAdD;;EAgBAR,SAAS,CAAC,MAAM;IACZS,YAAY;EACf,CAFQ,EAEN,CAACH,UAAD,CAFM,CAAT;EAIF,oBAAOP,aAAa,CAAC,OAAD,EAAU;IAC5Bc,IAAI,EAAE,UADsB;IAE5BC,OAAO,EAAEP,SAFmB;IAG5BH,KAAK,EAAEA,KAHqB;IAI5BW,OAAO,EAAEV;EAJmB,CAAV,CAApB;AAMD;;GAhCuBH,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}