{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dumbways\\\\BATCH 36\\\\my-app\\\\client\\\\src\\\\Pages\\\\User-Complain.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport Chat from '../Components/Complain/Chat';\nimport Contact from '../Components/Complain/Contact';\nimport NavBar from '../Components/NavBar';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { io } from 'socket.io-client';\nimport { UserContext } from '../Context/User-Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet socket;\nexport default function UserComplain() {\n  _s();\n\n  const title = 'Complain';\n  document.title = 'DumbMerch | ' + title;\n  const [contact, setContact] = useState(null);\n  const [contacts, setContacts] = useState([]); // create messages state\n\n  const [messages, setMessages] = useState([]); // consume user context\n\n  const [state] = useContext(UserContext);\n  useEffect(() => {\n    socket = io('http://localhost:5000', {\n      auth: {\n        token: localStorage.getItem(\"token\")\n      },\n      query: {\n        id: state.user.id\n      }\n    }); // define corresponding socket listener \n\n    socket.on(\"new message\", () => {\n      console.log(\"contact\", contact);\n      console.log(\"triggered\", contact === null || contact === void 0 ? void 0 : contact.id);\n      socket.emit(\"load messages\", contact === null || contact === void 0 ? void 0 : contact.id);\n    }); // listen error sent from server\n\n    socket.on(\"connect_error\", err => {\n      console.error(err.message); // not authorized\n    });\n    loadContact();\n    loadMessages();\n    return () => {\n      socket.disconnect();\n    };\n  }, [messages]);\n\n  const loadContact = () => {\n    // emit event load admin contact\n    socket.emit(\"load admin contact\"); // listen event to get admin contact\n\n    socket.on(\"admin contact\", async data => {\n      // manipulate data to add message property with the newest message\n      const dataContact = { ...data,\n        message: messages.length > 0 ? messages[messages.length - 1].message : \"Click here to start message\"\n      };\n      setContacts([dataContact]);\n    });\n  }; // used for active style when click contact\n\n\n  const onClickContact = data => {\n    setContact(data); // emit event load messages\n\n    socket.emit(\"load messages\", data.id);\n  };\n\n  const loadMessages = value => {\n    // define listener on event \"messages\"\n    socket.on(\"messages\", async data => {\n      // get data messages\n      if (data.length > 0) {\n        const dataMessages = data.map(item => ({\n          idSender: item.sender.id,\n          message: item.message\n        }));\n        console.log(dataMessages);\n        setMessages(dataMessages);\n      }\n\n      const chatMessagesElm = document.getElementById(\"chat-messages\");\n      chatMessagesElm.scrollTop = chatMessagesElm === null || chatMessagesElm === void 0 ? void 0 : chatMessagesElm.scrollHeight;\n    });\n  };\n\n  const onSendMessage = e => {\n    // listen only enter key event press\n    if (e.key === 'Enter') {\n      const data = {\n        idRecipient: contact.id,\n        message: e.target.value\n      }; //emit event send message\n\n      socket.emit(\"send message\", data);\n      e.target.value = \"\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      title: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      style: {\n        height: '85vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          style: {\n            height: '85vh'\n          },\n          className: \"px-3 border-end border-dark overflow-auto\",\n          children: /*#__PURE__*/_jsxDEV(Contact, {\n            dataContact: contacts,\n            clickContact: onClickContact,\n            contact: contact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 9,\n          style: {\n            maxHeight: '85vh',\n            color: '#fff'\n          },\n          className: \"px-2\",\n          children: /*#__PURE__*/_jsxDEV(Chat, {\n            contact: contact,\n            messages: messages,\n            user: state.user,\n            sendMessage: onSendMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(UserComplain, \"IpsBNlelvB8JGYxQE56IoXtLVEI=\");\n\n_c = UserComplain;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserComplain\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Chat","Contact","NavBar","Container","Row","Col","io","UserContext","socket","UserComplain","title","document","contact","setContact","contacts","setContacts","messages","setMessages","state","auth","token","localStorage","getItem","query","id","user","on","console","log","emit","err","error","message","loadContact","loadMessages","disconnect","data","dataContact","length","onClickContact","value","dataMessages","map","item","idSender","sender","chatMessagesElm","getElementById","scrollTop","scrollHeight","onSendMessage","e","key","idRecipient","target","height","maxHeight","color"],"sources":["C:/Dumbways/BATCH 36/my-app/client/src/Pages/User-Complain.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport Chat from '../Components/Complain/Chat'\r\nimport Contact from '../Components/Complain/Contact'\r\nimport NavBar from '../Components/NavBar'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nimport {io} from 'socket.io-client'\r\nimport { UserContext } from '../Context/User-Context'\r\n\r\nlet socket\r\n\r\nexport default function UserComplain() {\r\n\r\n    const title = 'Complain'\r\n    document.title = 'DumbMerch | ' + title\r\n\r\n    const [contact, setContact] = useState(null)\r\n    const [contacts, setContacts] = useState([])\r\n    // create messages state\r\n    const [messages, setMessages] = useState([])\r\n\r\n    // consume user context\r\n    const [state] = useContext(UserContext)\r\n\r\n    useEffect(() =>{\r\n        socket = io('http://localhost:5000', {\r\n            auth: {\r\n                token: localStorage.getItem(\"token\")\r\n            },\r\n            query: {\r\n                id: state.user.id\r\n            }\r\n        })\r\n\r\n        // define corresponding socket listener \r\n        socket.on(\"new message\", () => {\r\n            console.log(\"contact\", contact)\r\n            console.log(\"triggered\", contact?.id)\r\n            socket.emit(\"load messages\", contact?.id)\r\n        })\r\n        \r\n        // listen error sent from server\r\n        socket.on(\"connect_error\", (err) => {\r\n            console.error(err.message); // not authorized\r\n          });\r\n        loadContact()\r\n        loadMessages()\r\n\r\n        return () => {\r\n            socket.disconnect()\r\n        }\r\n    }, [messages])\r\n\r\n    const loadContact = () => {\r\n        // emit event load admin contact\r\n        socket.emit(\"load admin contact\")\r\n        // listen event to get admin contact\r\n        socket.on(\"admin contact\", async (data) => {\r\n            // manipulate data to add message property with the newest message\r\n            const dataContact = {\r\n                ...data, \r\n                message: messages.length > 0 ? messages[messages.length -1].message : \"Click here to start message\"\r\n            }\r\n            setContacts([dataContact])\r\n        })\r\n    }\r\n\r\n    // used for active style when click contact\r\n    const onClickContact = (data) => {\r\n        setContact(data)\r\n        // emit event load messages\r\n        socket.emit(\"load messages\", data.id)\r\n    }\r\n\r\n    const loadMessages = (value) => {\r\n        // define listener on event \"messages\"\r\n        socket.on(\"messages\", async (data) => {\r\n            // get data messages\r\n            if (data.length > 0) {\r\n                const dataMessages = data.map((item) => ({\r\n                    idSender: item.sender.id,\r\n                    message: item.message,\r\n                }))\r\n                console.log(dataMessages)\r\n                setMessages(dataMessages)\r\n            }\r\n            const chatMessagesElm = document.getElementById(\"chat-messages\")\r\n            chatMessagesElm.scrollTop = chatMessagesElm?.scrollHeight\r\n        })\r\n    }\r\n    const onSendMessage = (e) => {\r\n        // listen only enter key event press\r\n        if(e.key === 'Enter') {\r\n            const data = {\r\n                idRecipient: contact.id,\r\n                message: e.target.value\r\n            }\r\n\r\n            //emit event send message\r\n            socket.emit(\"send message\", data)\r\n            e.target.value = \"\"\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar title={title} />\r\n            <Container fluid style={{height: '85vh'}}>\r\n                <Row>\r\n                    <Col md={3} style={{height: '85vh'}} className=\"px-3 border-end border-dark overflow-auto\">\r\n                        <Contact dataContact={contacts}  clickContact={onClickContact} contact={contact} />\r\n                    </Col>\r\n                    <Col md={9} style={{maxHeight: '85vh', color: '#fff'}} className=\"px-2\">\r\n                        <Chat contact={contact} messages={messages} user={state.user} sendMessage={onSendMessage}/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}