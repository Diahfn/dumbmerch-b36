{"ast":null,"code":"import React, { useContext, useEffect, useState } from 'react';\nimport Chat from '../Components/Complain/Chat';\nimport Contact from '../Components/Complain/Contact';\nimport NavbarAdmin from '../Components/Navbar-Admin';\nimport { io } from 'socket.io-client';\nimport { UserContext } from '../Context/User-Context';\nlet socket;\nexport default function AdminComplain() {\n  const title = 'Admin Complain';\n  document.title = 'DumbMerch | ' + title; // const [contact, setContact] = useState(null)\n  // const [contacts, setContacts] = useState([])\n  // const [messages, setMessages] = useState([])\n  // const [state] = useContext(UserContext)\n  // useEffect(() => {\n  //     socket = io('http://localhost:5000', {\n  //         auth: {\n  //             token: localStorage.getItem('token')\n  //         },\n  //         query: {\n  //             id: state.user.id\n  //         }\n  //     })\n  //     socket.on('new message', () => {\n  //         console.log('contact', contact)\n  //         socket.emit('load messages', contact?.id)\n  //     })\n  //     loadContacts()\n  //     loadMessages()\n  //     return () => socket.disconnect()\n  // }, [messages])\n  // const loadContacts = () => {\n  //     socket.emit('load customer contacts')\n  //     // Listen event to get admin contact\n  //     socket.on('customer contacts', (data) => {\n  //         // Filter just customers which have sent a message\n  //         let dataContacts = data.filter(item => (item.status !== 'admin') && (item.recipientMessage.length > 0 || item.senderMessage.length > 0))\n  //         // Manipulate data to add message property with the newest\n  //         dataContacts = dataContacts.map((item) => ({\n  //             ...item,\n  //             message: item.senderMessage.length > 0 ? item.senderMessage[item.senderMessage.length - 1].message : 'Click here to start Message'\n  //         }))\n  //         setContacts([dataContacts])\n  //     })\n  // }\n  // const onClickContact = (data) => {\n  //     setContact(data)\n  //     socket.emit('load messages', data.id)\n  // }\n  // const loadMessages = () => {\n  //     // Define listener on event message\n  //     socket.on('messages', (data) => {\n  //         // Get data message\n  //         if (data.length > 0) {\n  //             const dataMessages = data.map((item) => ({\n  //                 idSender: item.sender.id,\n  //                 message: item.message\n  //             }))\n  //             setMessages(dataMessages)\n  //         }\n  //         loadContacts()\n  //         const chatMessageElm = document.getElementById('chat-messages')\n  //         chatMessageElm.scrollTop = chatMessageElm?.scrollHeight\n  //     })\n  // }\n  // const onSendMessage = (e) => {\n  //     // Listener only eneter key event press\n  //     if (e.key === 'Enter') {\n  //         const data = {\n  //             idRecipient: contact.id,\n  //             message: e.target.value\n  //         }\n  //         // Emit event send message\n  //         socket.emit('send message', data)\n  //         e.target.value = ''\n  //     }\n  // }\n  // return (\n  //     <div className='bg'>\n  //         <NavbarAdmin title={title} />\n  //         <div className='' style={{height: '84vh'}}>\n  //             <div className='d-flex'>\n  //                 <div style={{height: '84vh'}} className=\"px-3 border-end border-dark overflow-auto\">\n  //                     <Contact dataContact={contacts} clickContact={onClickContact} contact={contact} />\n  //                 </div>\n  //                 <div style={{maxHeight: '84vh', flex: 1}}>\n  //                     <Chat contact={contact} messages={messages} user={state.user} sendMessage={onSendMessage} />\n  //                 </div>\n  //             </div>\n  //         </div>\n  //     </div>\n  // )\n}\n_c = AdminComplain;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminComplain\");","map":{"version":3,"names":["React","useContext","useEffect","useState","Chat","Contact","NavbarAdmin","io","UserContext","socket","AdminComplain","title","document"],"sources":["C:/Dumbways/BATCH 36/my-app/client/src/Admin/Complain.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\r\nimport Chat from '../Components/Complain/Chat'\r\nimport Contact from '../Components/Complain/Contact'\r\nimport NavbarAdmin from '../Components/Navbar-Admin'\r\n\r\nimport {io} from 'socket.io-client'\r\nimport { UserContext } from '../Context/User-Context'\r\n\r\nlet socket\r\n\r\nexport default function AdminComplain() {\r\n\r\n    const title = 'Admin Complain'\r\n    document.title = 'DumbMerch | ' + title\r\n\r\n    // const [contact, setContact] = useState(null)\r\n    // const [contacts, setContacts] = useState([])\r\n    // const [messages, setMessages] = useState([])\r\n\r\n    // const [state] = useContext(UserContext)\r\n\r\n    // useEffect(() => {\r\n    //     socket = io('http://localhost:5000', {\r\n    //         auth: {\r\n    //             token: localStorage.getItem('token')\r\n    //         },\r\n    //         query: {\r\n    //             id: state.user.id\r\n    //         }\r\n    //     })\r\n\r\n    //     socket.on('new message', () => {\r\n    //         console.log('contact', contact)\r\n    //         socket.emit('load messages', contact?.id)\r\n    //     })\r\n\r\n    //     loadContacts()\r\n    //     loadMessages()\r\n\r\n    //     return () => socket.disconnect()\r\n\r\n    // }, [messages])\r\n\r\n    // const loadContacts = () => {\r\n        \r\n    //     socket.emit('load customer contacts')\r\n\r\n    //     // Listen event to get admin contact\r\n    //     socket.on('customer contacts', (data) => {\r\n\r\n    //         // Filter just customers which have sent a message\r\n    //         let dataContacts = data.filter(item => (item.status !== 'admin') && (item.recipientMessage.length > 0 || item.senderMessage.length > 0))\r\n\r\n    //         // Manipulate data to add message property with the newest\r\n    //         dataContacts = dataContacts.map((item) => ({\r\n    //             ...item,\r\n    //             message: item.senderMessage.length > 0 ? item.senderMessage[item.senderMessage.length - 1].message : 'Click here to start Message'\r\n    //         }))\r\n    //         setContacts([dataContacts])\r\n    //     })\r\n    // }\r\n\r\n    // const onClickContact = (data) => {\r\n    //     setContact(data)\r\n    //     socket.emit('load messages', data.id)\r\n    // }\r\n\r\n    // const loadMessages = () => {\r\n    //     // Define listener on event message\r\n    //     socket.on('messages', (data) => {\r\n    //         // Get data message\r\n    //         if (data.length > 0) {\r\n    //             const dataMessages = data.map((item) => ({\r\n    //                 idSender: item.sender.id,\r\n    //                 message: item.message\r\n    //             }))\r\n    //             setMessages(dataMessages)\r\n    //         }\r\n    //         loadContacts()\r\n    //         const chatMessageElm = document.getElementById('chat-messages')\r\n    //         chatMessageElm.scrollTop = chatMessageElm?.scrollHeight\r\n    //     })\r\n    // }\r\n\r\n    // const onSendMessage = (e) => {\r\n    //     // Listener only eneter key event press\r\n    //     if (e.key === 'Enter') {\r\n    //         const data = {\r\n    //             idRecipient: contact.id,\r\n    //             message: e.target.value\r\n    //         }\r\n\r\n    //         // Emit event send message\r\n    //         socket.emit('send message', data)\r\n    //         e.target.value = ''\r\n    //     }\r\n    // }\r\n\r\n    // return (\r\n    //     <div className='bg'>\r\n    //         <NavbarAdmin title={title} />\r\n    //         <div className='' style={{height: '84vh'}}>\r\n    //             <div className='d-flex'>\r\n    //                 <div style={{height: '84vh'}} className=\"px-3 border-end border-dark overflow-auto\">\r\n    //                     <Contact dataContact={contacts} clickContact={onClickContact} contact={contact} />\r\n    //                 </div>\r\n    //                 <div style={{maxHeight: '84vh', flex: 1}}>\r\n    //                     <Chat contact={contact} messages={messages} user={state.user} sendMessage={onSendMessage} />\r\n    //                 </div>\r\n    //             </div>\r\n    //         </div>\r\n    //     </div>\r\n    // )\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAOC,OAAP,MAAoB,gCAApB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AAEA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,IAAIC,MAAJ;AAEA,eAAe,SAASC,aAAT,GAAyB;EAEpC,MAAMC,KAAK,GAAG,gBAAd;EACAC,QAAQ,CAACD,KAAT,GAAiB,iBAAiBA,KAAlC,CAHoC,CAKpC;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EAEA;EAEA;EAEA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH;KAvGuBD,a"},"metadata":{},"sourceType":"module"}